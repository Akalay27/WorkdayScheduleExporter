{"version":3,"sources":["util/Step.js","util/Converter.js","components/SheetJSFT.js","components/FileInputButton.js","App.js","index.js"],"names":["Step","SELECTING","SUCCESS","ERROR","InitialOptions","DATES","SPECIAL_SCHEDULES","WEEKDAY_NAMES","Converter","file","setStep","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","convert","readAsArrayBuffer","sheet","calendar","optionsArr","range","utils","decode_range","rowNum","s","r","encode_cell","c","termCell","nameCell","formatCell","locationTimeAndDayCell","term","indexOf","termDates","splitMPatterns","split","weekdays","day","length","times","startTimestamp","moment","endTimestamp","finishTimestamp","options","title","location","description","start","Date","format","end","recurrence","frequency","ICalendar","addEvent","d","data","cls","includes","newOption","Object","assign","newDate","setFullYear","setMonth","setDate","download","SheetJSFT","map","x","join","FileInputButton","props","handleChange","bind","files","this","handleFile","className","htmlFor","children","id","accept","onChange","React","Component","App","useState","step","convertFile","a","load","uploadFile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45a1ac36.chunk.js","sourcesContent":["const Step = {\n\tSELECTING: \"\",\n\tSUCCESS: \"File Successfully Uploaded! Downloading...\",\n\tERROR: \"An Unexpected Error Occured: Check that the spreadsheet is a valid schedule\"\n};\n\nexport default Step;","import { ICalendar } from \"datebook\";\nimport XLSX from \"xlsx\"\nimport moment from 'moment'\nimport Step from \"./Step\";\n\nconst BLANK_ROWS = 3;\nconst InitialOptions = {\n\tDATES: \n\t{\n\t\t'A': [\"2021-08-26\",\"2021-10-13\"],\n\t\t'B': [\"2021-10-20\",\"2021-12-10\"],\n\t\t'C': [\"2022-01-13\",\"2022-03-04\"],\n\t\t'D': [\"2022-03-14\",\"2022-05-02\"],\n\t},\n\tSPECIAL_SCHEDULES:\n\t[\n\t\t['2021-08-25', 'MO', 'A'],\n\t\t['2021-01-12', 'MO', 'C'],\n\t\t['2021-05-03', 'FR', 'D'] // Not going to deal with this one at the moment.\n\t]\n\t// Add the weird days to switch\n}\nconst WEEKDAY_NAMES = {\n\t'M': 'MO',\n\t'T': 'TU',\n\t'W': 'WE',\n\t'R': 'TH',\n\t'F': 'FR'\n}\n\n// function Converter(file) {\nclass Converter {\n\tstatic load(file, setStep) {\n\t\tconst reader = new FileReader();\n\t\tconst rABS = !!reader.readAsBinaryString;\n\t\treader.onload = e => {\n\t\t\t// Parse data\n\t\t\tconst bstr = e.target.result;\n\t\t\tconst wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n\t\t\t// Get the first worksheet\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t// Run converter\n\t\t\t this.convert(ws, setStep);\n\t\t}\n\t\tif (rABS) {\n\t\t\treader.readAsBinaryString(file);\n\t\t}\n\t\telse {\n\t\t\treader.readAsArrayBuffer(file);\n\t\t}\n\t}\n\n\tstatic convert(sheet, setStep) {\n\t\tsheet[\"!ref\"] = 'L16'\n\t\tvar calendar = null;\n\t\tvar optionsArr = [];\n\t\tvar range = XLSX.utils.decode_range('A1:K50');\n\t\tfor (var rowNum = BLANK_ROWS + range.s.r; rowNum < range.e.r; rowNum++) {\n\t\t\t// Check if next class row exists\n\t\t\tif (sheet[XLSX.utils.encode_cell({r: rowNum, c: 0})] != null) {\n\t\t\t\t// Read necessary cells\n\t\t\t\tlet termCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 0})]['v'];\n\t\t\t\tlet nameCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 1})]['v'];\n\t\t\t\tlet formatCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 5})]['v'];\n\t\t\t\tlet locationTimeAndDayCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 6})]['v'];\n\t\t\t\t// Let professorCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 8})]['v'];\n\t\t\t\tif (termCell != null) {\n\t\t\t\t\t// Example: ...2021 Fall B Term -> B \n\t\t\t\t\tlet term = termCell[termCell.indexOf(\"Term\") - 2];\n\t\t\t\t\tlet termDates = InitialOptions.DATES[term];\n\t\t\t\t\t// Split all info in \"Meeting Patterns\" cell\n\t\t\t\t\tlet splitMPatterns = locationTimeAndDayCell.split(\" | \");\n\t\t\t\t\tlet weekdays = splitMPatterns[0].split(\"-\");\n\t\t\t\t\t// Convert day abbreviations to those recognized by Datebook\n\t\t\t\t\tfor (var day = 0; day < weekdays.length; day++) {\n\t\t\t\t\t\tweekdays[day] = WEEKDAY_NAMES[weekdays[day]];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Read times from Meeting Patterns\n\t\t\t\t\tlet times = splitMPatterns[1].split(\" - \");\n\t\t\t\t\tlet startTimestamp = moment(termDates[0] + \" \" + times[0], \"YYYY-MM-DD h:m A\");\n\t\t\t\t\tlet endTimestamp = moment(termDates[0] + \" \" + times[1], \"YYYY-MM-DD h:m A\");\n\t\t\t\t\tlet finishTimestamp = moment(termDates[1] + \" \" + times[1], \"YYYY-MM-DD h:m A\");\n\t\t\t\t\tlet options = {\n\t\t\t\t\t\ttitle: nameCell,\n\t\t\t\t\t\tlocation: splitMPatterns[2],\n\t\t\t\t\t\tdescription: formatCell,\n\t\t\t\t\t\tstart: new Date(startTimestamp.format()),\n\t\t\t\t\t\tend: new Date(endTimestamp.format()),\n\t\t\t\t\t\trecurrence: {\n\t\t\t\t\t\t\tfrequency: 'WEEKLY',\n\t\t\t\t\t\t\tweekdays: weekdays,\n\t\t\t\t\t\t\tend: new Date(finishTimestamp.format()),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tterm: term\n\t\t\t\t\t}\n\n\t\t\t\t\tif (calendar == null) {\n\t\t\t\t\t\tcalendar = new ICalendar(options);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcalendar.addEvent(new ICalendar(options));\n\t\t\t\t\t}\n\t\t\t\t\toptionsArr[optionsArr.length] = options;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\t\n\t\t// deal with special schedule days\n\t\tfor (var d = 0; d < InitialOptions.SPECIAL_SCHEDULES.length; d++) {\n\t\t\t\n\t\t\tlet data = InitialOptions.SPECIAL_SCHEDULES[d];\n\t\t\tfor (var cls = 0; cls < optionsArr.length; cls++) {\n\t\t\t\tlet weekdaysArr = optionsArr[cls].recurrence.weekdays\n\t\t\t\tif (weekdaysArr.includes(data[1]) && optionsArr[cls].term === data[2]) {\n\t\t\t\t\tvar newOption = {};\n\t\t\t\t\tObject.assign(newOption,optionsArr[cls]);\n\t\t\t\t\tdelete newOption.recurrence;\n\t\t\t\t\tlet newDate = data[0].split(\"-\");\n\t\t\t\t\tnewOption.start.setFullYear(newDate[0]);\n\t\t\t\t\tnewOption.start.setMonth(newDate[1] - 1);\n\t\t\t\t\tnewOption.start.setDate(newDate[2]);\n\t\t\t\t\tnewOption.end.setFullYear(newDate[0]);\n\t\t\t\t\tnewOption.end.setMonth(newDate[1] - 1);\n\t\t\t\t\tnewOption.end.setDate(newDate[2]);\n\t\t\t\t\tcalendar.addEvent(new ICalendar(newOption));\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t}\n\t\n\t\tif (calendar) {\n\t\t\tcalendar.download(\"Workday Schedule.ics\");\n\t\t\tsetStep(Step.SUCCESS);\n\t\t}\n\t\telse {\n\t\t\tsetStep(Step.ERROR);\n\t\t}\n\t}\n}\n\nexport default Converter;","const SheetJSFT = [\n\t\"xlsx\",\n\t\"xlsb\",\n\t\"xlsm\",\n\t\"xls\",\n\t\"xml\",\n\t\"csv\",\n\t\"txt\",\n\t\"ods\",\n\t\"fods\",\n\t\"uos\",\n\t\"sylk\",\n\t\"dif\",\n\t\"dbf\",\n\t\"prn\",\n\t\"qpw\",\n\t\"123\",\n\t\"wb*\",\n\t\"wq*\",\n\t\"html\",\n\t\"htm\"\n].map(\n\tfunction(x) {\n\t\treturn \".\" + x;\n\t}\n).join(\",\");\n\nexport default SheetJSFT;","import React from 'react';\nimport SheetJSFT from './SheetJSFT';\nimport './FileInputButton.css';\n\nclass FileInputButton extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\thandleChange(e) {\n\t\tconst files = e.target.files;\n\t\tif (files && files[0]) {\n\t\t\tthis.props.handleFile(files[0]);\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<form className=\"FileInputButton\">\n\t\t\t\t<label htmlFor=\"file\">\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tid=\"file\"\n\t\t\t\t\taccept={SheetJSFT}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default FileInputButton;","import { useState } from 'react';\nimport Converter from './util/Converter';\nimport FileInputButton from './components/FileInputButton'\nimport Step from './util/Step'\nimport './App.css';\n\nfunction App() {\n\tconst [step, setStep] = useState(Step.SELECTING);\n\tconst uploadFile = (file) => {\n\t\tconvertFile(file);\n\t};\n\tconst convertFile = async (file) => {\n\t\tConverter.load(file, setStep);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h1>Workday Schedule Exporter</h1>\n\t\t\t\t<p>Upload an .XLSX or .CSV spreadsheet and convert it to an .ICS</p>\n\t\t\t</header>\n\n\t\t\t<FileInputButton handleFile={(file) => uploadFile(file)}>\n\t\t\t\tSelect File\n\t\t\t</FileInputButton>\n\n\t\t\t<p>{step}</p>\n\n\t\t\t<footer className=\"App-footer\">\n\t\t\t\t<p>Made by Adam Kalayjian and Kai Nakamura</p>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
{"version":3,"sources":["util/Step.js","util/Converter.js","components/SheetJSFT.js","components/FileInputButton.js","App.js","index.js"],"names":["Step","SELECTING","SUCCESS","ERROR","InitialOptions","DATES","SPECIAL_SCHEDULES","WEEKDAY_NAMES","Converter","file","setStep","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","convert","readAsArrayBuffer","sheet","calendar","range","utils","decode_range","rowNum","BLANK_ROWS","s","r","encode_cell","c","termCell","nameCell","formatCell","locationTimeAndDayCell","term","indexOf","termDates","splitMPatterns","split","weekdays","day","length","times","startTimestamp","moment","endTimestamp","finishTimestamp","options","title","location","description","start","Date","format","end","recurrence","frequency","ICalendar","addEvent","download","SheetJSFT","map","x","join","FileInputButton","props","handleChange","bind","files","this","handleFile","className","htmlFor","children","id","accept","onChange","React","Component","App","useState","step","convertFile","a","load","uploadFile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.deedb640.chunk.js","sourcesContent":["const Step = {\r\n\tSELECTING: \"\",\r\n\tSUCCESS: \"File Successfully Uploaded! Downloading...\",\r\n\tERROR: \"An Unexpected Error Occured: Check that the spreadsheet is a valid schedule\"\r\n};\r\n\r\nexport default Step;","import { ICalendar } from \"datebook\";\r\nimport XLSX from \"xlsx\"\r\nimport moment from 'moment'\r\nimport Step from \"./Step\";\r\n\r\nconst BLANK_ROWS = 3;\r\nconst InitialOptions = {\r\n\tDATES: \r\n\t{\r\n\t\t'A': [\"2021-08-25\",\"2021-10-13\"],\r\n\t\t'B': [\"2021-10-20\",\"2021-12-10\"],\r\n\t\t'C': [\"2022-01-25\",\"2022-03-04\"],\r\n\t\t'D': [\"2022-03-14\",\"2022-05-03\"],\r\n\t},\r\n\tSPECIAL_SCHEDULES:\r\n\t{\r\n\t\t'2021-8-25': 'MO',\r\n\t\t'2021-1-12': 'MO',\r\n\t\t'2021-5-3': 'FR' // Not going to deal with this one at the moment.\r\n\t}\r\n\t// Add the weird days to switch\r\n}\r\nconst WEEKDAY_NAMES = {\r\n\t'M': 'MO',\r\n\t'T': 'TU',\r\n\t'W': 'WE',\r\n\t'R': 'TH',\r\n\t'F': 'FR'\r\n}\r\n\r\n// function Converter(file) {\r\nclass Converter {\r\n\tstatic load(file, setStep) {\r\n\t\tconst reader = new FileReader();\r\n\t\tconst rABS = !!reader.readAsBinaryString;\r\n\t\treader.onload = e => {\r\n\t\t\t// Parse data\r\n\t\t\tconst bstr = e.target.result;\r\n\t\t\tconst wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\r\n\t\t\t// Get the first worksheet\r\n\t\t\tconst wsname = wb.SheetNames[0];\r\n\t\t\tconst ws = wb.Sheets[wsname];\r\n\t\t\t// Run converter\r\n\t\t\t this.convert(ws, setStep);\r\n\t\t}\r\n\t\tif (rABS) {\r\n\t\t\treader.readAsBinaryString(file);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic convert(sheet, setStep) {\r\n\t\tsheet[\"!ref\"] = 'L16'\r\n\t\tvar calendar = null;\r\n\t\t\r\n\t\tvar range = XLSX.utils.decode_range('A1:K50');\r\n\t\tfor (var rowNum = BLANK_ROWS + 1 + range.s.r; rowNum < range.e.r; rowNum++) {\r\n\t\t\t// Check if next class row exists\r\n\t\t\tif (sheet[XLSX.utils.encode_cell({r: rowNum, c: 0})] != null) {\r\n\t\t\t\t// Read necessary cells\r\n\t\t\t\tlet termCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 0})]['v'];\r\n\t\t\t\tlet nameCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 1})]['v'];\r\n\t\t\t\tlet formatCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 5})]['v'];\r\n\t\t\t\tlet locationTimeAndDayCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 6})]['v'];\r\n\t\t\t\t// Let professorCell = sheet[XLSX.utils.encode_cell({r: rowNum, c: 8})]['v'];\r\n\t\t\t\tif (termCell != null) {\r\n\t\t\t\t\t// Example: ...2021 Fall B Term -> B \r\n\t\t\t\t\tlet term = termCell[termCell.indexOf(\"Term\") - 2];\r\n\t\t\t\t\tlet termDates = InitialOptions.DATES[term];\r\n\t\t\t\t\t// Split all info in \"Meeting Patterns\" cell\r\n\t\t\t\t\tlet splitMPatterns = locationTimeAndDayCell.split(\" | \");\r\n\t\t\t\t\tlet weekdays = splitMPatterns[0].split(\"-\");\r\n\t\t\t\t\t// Convert day abbreviations to those recognized by Datebook\r\n\t\t\t\t\tfor (var day = 0; day < weekdays.length; day++) {\r\n\t\t\t\t\t\tweekdays[day] = WEEKDAY_NAMES[weekdays[day]];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Read times from Meeting Patterns\r\n\t\t\t\t\tlet times = splitMPatterns[1].split(\" - \");\r\n\t\t\t\t\tlet startTimestamp = moment(termDates[0] + \" \" + times[0], \"YYYY-MM-DD h:m A\");\r\n\t\t\t\t\tlet endTimestamp = moment(termDates[0] + \" \" + times[1], \"YYYY-MM-DD h:m A\");\r\n\t\t\t\t\tlet finishTimestamp = moment(termDates[1] + \" \" + times[1], \"YYYY-MM-DD h:m A\");\r\n\t\t\t\t\tlet options = {\r\n\t\t\t\t\t\ttitle: nameCell,\r\n\t\t\t\t\t\tlocation: splitMPatterns[2],\r\n\t\t\t\t\t\tdescription: formatCell,\r\n\t\t\t\t\t\tstart: new Date(startTimestamp.format()),\r\n\t\t\t\t\t\tend: new Date(endTimestamp.format()),\r\n\t\t\t\t\t\trecurrence: {\r\n\t\t\t\t\t\t\tfrequency: 'WEEKLY',\r\n\t\t\t\t\t\t\tweekdays: weekdays,\r\n\t\t\t\t\t\t\tend: new Date(finishTimestamp.format()),\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (calendar == null) {\r\n\t\t\t\t\t\tcalendar = new ICalendar(options);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcalendar.addEvent(new ICalendar(options));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t\tif (calendar) {\r\n\t\t\tcalendar.download(\"Workday Schedule.ics\");\r\n\t\t\tsetStep(Step.SUCCESS);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetStep(Step.ERROR);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Converter;","const SheetJSFT = [\r\n\t\"xlsx\",\r\n\t\"xlsb\",\r\n\t\"xlsm\",\r\n\t\"xls\",\r\n\t\"xml\",\r\n\t\"csv\",\r\n\t\"txt\",\r\n\t\"ods\",\r\n\t\"fods\",\r\n\t\"uos\",\r\n\t\"sylk\",\r\n\t\"dif\",\r\n\t\"dbf\",\r\n\t\"prn\",\r\n\t\"qpw\",\r\n\t\"123\",\r\n\t\"wb*\",\r\n\t\"wq*\",\r\n\t\"html\",\r\n\t\"htm\"\r\n].map(\r\n\tfunction(x) {\r\n\t\treturn \".\" + x;\r\n\t}\r\n).join(\",\");\r\n\r\nexport default SheetJSFT;","import React from 'react';\r\nimport SheetJSFT from './SheetJSFT';\r\nimport './FileInputButton.css';\r\n\r\nclass FileInputButton extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\thandleChange(e) {\r\n\t\tconst files = e.target.files;\r\n\t\tif (files && files[0]) {\r\n\t\t\tthis.props.handleFile(files[0]);\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"FileInputButton\">\r\n\t\t\t\t<label htmlFor=\"file\">\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\tid=\"file\"\r\n\t\t\t\t\taccept={SheetJSFT}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FileInputButton;","import { useState } from 'react';\r\nimport Converter from './util/Converter';\r\nimport FileInputButton from './components/FileInputButton'\r\nimport Step from './util/Step'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [step, setStep] = useState(Step.SELECTING);\r\n\tconst uploadFile = (file) => {\r\n\t\tconvertFile(file);\r\n\t};\r\n\tconst convertFile = async (file) => {\r\n\t\tConverter.load(file, setStep);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<h1>Workday Schedule Exporter</h1>\r\n\t\t\t\t<p>Upload an .XLSX or .CSV spreadsheet and convert it to an .ICS</p>\r\n\t\t\t</header>\r\n\r\n\t\t\t<FileInputButton handleFile={(file) => uploadFile(file)}>\r\n\t\t\t\tSelect File\r\n\t\t\t</FileInputButton>\r\n\r\n\t\t\t<p>{step}</p>\r\n\r\n\t\t\t<footer className=\"App-footer\">\r\n\t\t\t\t<p>Made by Adam Kalayjian and Kai Nakamura</p>\r\n\t\t\t</footer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}